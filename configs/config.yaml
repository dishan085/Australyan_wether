# Data for the prepare_dataset.py:

# Columns where the data is True or False:
bool_type_columns:
- RainToday
- RainTomorrow

# Maximum length of the tail of the boxplot to filter outliers:
tail_len:
- 1.5
- 1.75
- 2
- 2.25
- 2.5

missing_cat: mode # method for filling in missing categorical data

# The share of empty values in the columns, shows which columns will be deleted:
null_limit:
- 0.38
- 0.4
- 0.43
- 0.47

# Columns in which data has a certain frequency and by which you can group data
# from other columns:
columns_groupby:
- Location
- Year
- Month

# Resulting prepared dataset:
csv: results/data.csv

# Column which contains the dates:
date_column: Date

# Incoming dataset:
draft_csv: weatherAus.csv

# Sign of including the Rainfall column in the test dataframe:
insert_Rainfall:
- 1
- 0

# Sign of including the day column in the test dataframe:
insert_day:
- 0
- 1

# Correlation coefficient, above which extra columns are removed:
korelation_limit:
- 0.87
- 0.73
- 0.68
- 0.66

# Target column:
target: RainTomorrow

# __________________________________________________________________________________________
# Data for the main.py:

# Share of test data in the dataset:
test_size: 0.3

# Random forest classifier parameters:
random_forest:
  n_estimators:
  - 100
  - 150
  - 200
  criterion:
  - gini
  - entropy  

# Logistic regression classifier parameters:
log_reg:
  C:
  - 0.25
  - 0.5
  - 0.75
  - 1.0
  max_iter:
  - 300
  - 500
  - 800
  class_weight:
  - None
  - balanced

# K-Neighbors Classifier parameters:
knn:
  weights:
  - uniform
  - distance
  metric:
  - euclidean
  - manhattan
  - haversine
  - minkovski
  n_neighbors:
  - 5
  - 7
  - 8
  - 10

# SVM classifier parameters:
svm:
  kernel:
  - sigmoid
  - rbf
  C:
  - 0.1
  gamma:
  - scale

# Design tree classifier parameters:
tree:
  max_depth:
  - 80
  - 100
  - 120
  - 140
  min_samples_leaf:
  - 5
  - 3
  max_leaf_nodes:
  - 1200
  - 1400
  - 1600
  - 1800